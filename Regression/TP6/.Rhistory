#exercice 2
X1_tilde = matrix(c(1,1,1,1), c(2,3,0,-1),c(4,8,6,2))
X1_tilde
#exercice 2
X1_tilde = matrix(c(1,1,1,1), c(2,3,0,-1),c(4,8,6,2), nrow = 4, ncol = 3)
X1_tilde
#exercice 2
X1_tilde = matrix(c(1,1,1,1), c(2,3,0,-1),c(4,8,6,2), nrow = 4, ncol = 3,byrow = TRUE)
X1_tilde
#exercice 2
X1_tilde = matrix(c(1,1,1,1,2,3,0,-1,4,8,6,2), nrow = 4, ncol = 3,byrow = TRUE)
X1_tilde
#on trouve le rang de la premiere matrice, mon essai ne marche pas
qr(matrix(c(1,2,4,1,3,8,1,0,6,1,-1,2), ncol = 3, byrow = TRUE))$rank
#exercice 2
X1_tilde = matrix(c(1,1,1,1,2,3,0,-1,4,8,6,2), nrow = 4, ncol = 3,byrow = FALSE)
X1_tilde
#1) la matrice 3x3 est de rang3, donc de rang plein. Ainsi elle a une solution unique aux equations normales
qr(mmatrix(c(1,1,1,1,1,1,0,0,0,0,1), ncol = 3))$rank
#1) la matrice 3x3 est de rang3, donc de rang plein. Ainsi elle a une solution unique aux equations normales
qr(matrix(c(1,1,1,1,1,1,0,0,0,0,1), ncol = 3))$rank
#1) la matrice 3x3 est de rang3, donc de rang plein. Ainsi elle a une solution unique aux equations normales
qr(matrix(c(1,1,1,1,1,1,0,0,0,0,0,1), ncol = 3))$rank
#2) meme reponse que pour le 1)
qr(matrix(c(1,1,1,1,2,1,-3,-1,4,2,-6,-2), ncol=3))$rank
#exercice 4
Y = c(78.5,74.3,104.3,87.6,95.9,109.2,102.7)
Y
X_tilde = matrix(c(rep(1,7),7,1,11,11,7,11,3,2.6,2.9,5.6,3.1,5.2,5.5,7.1), ncol = 3)
X_tilde
X_tilde
t(X_tilde)%*%X_tilde
t(X_tilde)%*%Y
#c)
solve(t(X_tilde)%*%X_tilde)
Beta_chapeau = t(X_tilde)%*%Y
Beta_chapeau
Beta_chapeau = solve(t(X_tilde)%*%X_tilde)%*%t(X_tilde)%*%Y
Beta_chapeau
#formule page 37 pour Y chapeau
Y_chapeau = X_tilde%*%solve(t(X_tilde)%*%X_tilde)%*%t(X_tilde)%*%Y
Y_chapeau
t(X_tilde)%*%X_tilde
t(X_tilde)%*%Y
#c)
#verification de l'inverse
solve(t(X_tilde)%*%X_tilde)
#formule page 34 pour beta chapeau
Beta_chapeau = solve(t(X_tilde)%*%X_tilde)%*%t(X_tilde)%*%Y
Beta_chapeau
#formule page 37 pour Y chapeau
Y_chapeau = X_tilde%*%solve(t(X_tilde)%*%X_tilde)%*%t(X_tilde)%*%Y
Y_chapeau
#formule page 37 pour Y chapeau
Y_chapeau = X_tilde%*%Beta_chapeau
Y_chapeau
epsilon = Y - Y_chapeau
epsidolon
epsilon
setwd("C:/Users/kf891141/Desktop/Statistique_Cours/Regression/TP6")
prostate = read.table('CancerProstate.txt', header = TRUE)
reg=lm(Y~.data=prostate)
summary()
prostate = read.table('CancerProstate.txt', header = TRUE)
reg=lm(Y~.data=prostate)
reg=lm(Y~.,data=prostate)
summary(reg)
plot(reg$fitted.values,rstandard(reg))
#d
library(MASS)
transf=boxcox(reg)
#on va avoir un lambda exacte
logY=log(prostate$Y)
newprostate=data.frame(logY=logY,x1=prostate$X1, X2=prostate$X2)
reg_log=lm(logY~.,data=newprostate)
summary(reg_log)
plot(reg_log$fitted.values,rstandard((reg_log)))
ex4=read.table('CH06PR09.txt',header = TRUE)
ex4
reg_ex4=lm(Y~X1+X3+X2,data=ex4)
anova(reg_ex4)
#
reg2=lm(Y~X1+X3,data=ex4)
anova(reg2,reg_ex4)
#3e facon
pf(summary(reg_ex4)$coefficient[4,3]^2,1,48,lower.tail = FALSE)
reg_c1= lm(Y~X1+X2+X3,data=ex4)
reg_C2 = lm(Y~X2+X1+X3,data=ex4)
sum(anova(reg_c1)$'sum Sq'[1:2])
sum(anova(reg_c2)$'sum Sq'[1:2])
reg_c2 = lm(Y~X2+X1+X3,data=ex4)
sum(anova(reg_c1)$'sum Sq'[1:2])
sum(anova(reg_c2)$'sum Sq'[1:2])
sum(anova(reg_c1)$'Sum Sq'[1:2])
sum(anova(reg_c2)$'Sum Sq'[1:2])
anova(reg_c1)
anova(reg_c2)
